"strict mode";

/*
  create file /home/dkz/ultimheat.com/museum/sitemap.txt :
  one url per line for each article.
  with or without <h1> in name.
*/

const assert = require('assert');
const api = require('./db-blueink.js');
const fs = require('fs');

/*
  Sitemap index-PDF
*/

module.exports = function(req,res) {
  const etime = new Date().getTime();

  return api.db.many(`
    select
      item.item_id as id,
--      content->>'h1' as h1,
--      content->>'links' as links,
      content->'links' as links,
      content->>'flag' as flag
    from cr_items item
    join cr_revisions r on (r.item_id = item.item_id)
    where (parent_id = 604)
    and (content->>'flag' != 'R') or (content->>'flag' is null)
    `)
  .then(data =>{
//    const list = data.map(it=>`http://museum-assets.ultimheat.com/pdf-www/${it.file}`)

    if (false) data.forEach(it=>{
      console.log('-- ',it);
    })
    /*
    const list = data.filter(it=>it.links).map(it=>{
//      console.log('it.links:',it.links,Array.isArray(it.links))
      return it.links.map(k=> `http://museum-assets.ultimheat.com/pdf-www/${k.fn}.pdf`).join('\n');
    })
    */
    const list = [];
    data.filter(it=>it.links).forEach(it=>{
      it.links.forEach(it=>{list.push(it.fn)});
    })

    console.log('data.length:',data.length);

  //  console.log(list);
    res.status(200).send(list
      .sort()
      .map(it=>`http://museum-assets.ultimheat.com/pdf-www/${it}.pdf`)
      .join('<br>\n'));
  })
  .catch(err =>{
    res.status(200).send(`err:${err}`)
  })

}
